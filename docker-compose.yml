services:
  # PostgreSQL Database
  postgres:
    image: postgres:latest
    container_name: greg-postgres
    environment:
      POSTGRES_DB: greg_fullstack
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d greg_fullstack"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - greg-network

#  # Spring Boot Application
#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: greg-app
#    environment:
#      SPRING_PROFILES_ACTIVE: docker
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/greg_fullstack
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: password
#    ports:
#      - "8080:8080"
#    depends_on:
#      postgres:
#        condition: service_healthy
#    networks:
#      - greg-network
#    volumes:
#      - ./logs:/app/logs

  # pgAdmin for database management (optional, for development)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: greg-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - greg-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  greg-network:
    driver: bridge
